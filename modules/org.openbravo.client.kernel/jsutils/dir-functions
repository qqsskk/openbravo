#!/bin/bash
# *************************************************************************
# * The contents of this file are subject to the Openbravo  Public  License
# * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
# * Version 1.1  with a permitted attribution clause; you may not  use this
# * file except in compliance with the License. You  may  obtain  a copy of
# * the License at http://www.openbravo.com/legal/license.html
# * Software distributed under the License  is  distributed  on  an "AS IS"
# * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# * License for the specific  language  governing  rights  and  limitations
# * under the License.
# * The Original Code is Openbravo ERP.
# * The Initial Developer of the Original Code is Openbravo SLU
# * All portions are Copyright (C) 2019 Openbravo SLU
# * All Rights Reserved.
# * Contributor(s):  ______________________________________.
# ************************************************************************

#
# Returns the relative location to Openbravo root directory
#
function getOpenbravoRootPath {
    OPENBRAVO_ROOT_PATH=""
    if [[ -d "../../modules" ]]; then
        # Running from module
        OPENBRAVO_ROOT_PATH="../../"
    elif [[ -d "./modules" ]]; then
        # Running from Openbravo root
        OPENBRAVO_ROOT_PATH="./"
    else
        echo -e "\n\033[0;31mError:\033[0m \"$(pwd)\" is not a valid path" >&2
        echo "Run either from the Openbravo or a module root directory" >&2
    fi

    echo "${OPENBRAVO_ROOT_PATH}"
}

#
# Returns the path where js files should be scanned
# Core should scan only js files contained in modules
# Modules should scan starting from its root directory
#
function getJsFilesScanPath {
    SCAN_BASE_PATH=""
    if [[ -d "../../modules" ]]; then
        SCAN_BASE_PATH="$(pwd)"
    elif [[ -d "./modules" ]]; then
        SCAN_BASE_PATH="$(pwd)/modules"
    else
        echo -e "\n\033[0;31mError:\033[0m \"$(pwd)\" is not a valid path" >&2
        echo "Run either from the Openbravo or a module root directory" >&2
    fi

    echo "${SCAN_BASE_PATH}"
}

function isCurrentFolderModuleRoot {
    if [[ -d "../../modules" ]]; then
        IS_A_MODULE=true
    else
        IS_A_MODULE=false
    fi

    echo "${IS_A_MODULE}"
}

#
# Assuming the received argument is a list of files, it will check whether the paths are absolute or relative. In case
# the path is relative, it will be converted to absolute.
#
function convertPathsToAbsolute {
    for arg in "$@"; do
        if [[ "${arg:0:1}" = "/" ]]; then
            echo "${arg} "
        else
            echo "$(pwd)/${arg} "
        fi
    done
}

#
# Assuming we're in the Openbravo root, find all module folders which contains the file given in its root level
#
function getModulesPathWithIgnoreFile {
    echo $(find modules -type f -name ${1} -exec dirname {} \; | sort -u)
}
